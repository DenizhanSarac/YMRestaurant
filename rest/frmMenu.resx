<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEEAAACACAYAAABUQwRUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAACg5JREFUeF7VnQeob0cRxp+9G2NvaKKiKFYs2AjBHhUVQTH2gl3BgsYSoyAxNqwY
        xV6wNxJ7V9TE3hsm9kpUEjVq7H7fxfNY5327Z2Z2zvXlBz8I7947+8/ee87ZnZ3ds6fDTeDv4b/hL+AV
        oeXW8E+Q3/NDeGloeTXk1+nL+A8bc1bIz/5QeB94SZjmvXD58PT50PIZ2H7PU2HLlWD7dXp5uBU3hl+D
        bXt/hReHKez/4Guh5Vuw/Z4XwJbrwfbr9NpwC+4Iz4C2PXpumOLM1Ak3gn+Dti36R5jmzNIJF4I/hrad
        xR/BNF+GbbD9tROOhbaN1i/CNL+FbbD9sROuCv8BbRutH4IpzgdtsP2xE94JbXzrm2GKq0EbrKoTbgAr
        4Ljln9DGt/JySXEYtMGqOuE2sIIXQRtb+QyY4iHQBqvqhHvAWc4Dl9Hsmo+HKY6BNlhVJzwSznJXaOP2
        5C80xZugDVbVCU+DsxwHbdyeh8MUn4U22FuhJdMJL4YzHAB7o0Pl7WGKn0MbjBMqi+2El8AW1Qn8K5vh
        LtDGHHkoDHNOqB49n4AW2wmvgC2qE9KDl//yGmhjjuRnCMPnrwr2BWixnfA62KI6YWYYexb4K2hjjuSo
        MszNoAr2bWixnWBHZ6oTmHzJcnVo4615ORjmflAF40zNYjuBw9gW1Ql8vmdhtsjGW/OiMAwfYSrYb6DF
        doK9eapOoOeAGdSje03Og8L0bjx/hhbbCR+GLb1OuATM8DOo4o08GwzzcaiCUSYxW2wnfBK29Dohc7Ni
        ElfFGvl3mOIHUAWk54ctthNOgC29TrgpjMJBj4o18g8wDH/To9GY/TO2nfAl2NLrBCZFozwFqlgj1X1s
        lctAFWzxCrDFdsI3YEuvE+4Po7wbqlgjuV4Shnl7FWzxGrDFdsL3YEuvEx4Ho4wu056pJCtnXCrY4g1h
        i+0EOxDqdQKn6hG4buDJIlm/D8M8EapgizeHLbYTOPFq6XXCy2GEa0IVZ001yl2Fa4Uq2CKTGS22E7gu
        2Q6Eep1gR5ZrRGeOi1+HYd4HVbBFjiE4yyRc3+Pd137PsyEHKHzS8L/t1ynjRDgSqjhrfgWGsYuwSl73
        b4eqAxa5ZnGK+bdW3ukjtCvbEVMzVmaGVLBqnwQjfAyqOGt+Hoa5LVTBKuVd3o431jgZqlhr2hGsC17L
        fKyogFW+EkZgIoU1BirWmsyVpmD1yb+gCjrrSZCJ0gisNFGxPKY7gTwZqqAz/gRGLwNyHajieZzqBPJo
        uLbi65WPxGztEJftVEyP051Arg+ZYFUNeOQIkpMlXtdZWHylYntM3Rh73BIyiepZ/2MGiuMNzkOyabQW
        TrZUOx5PhOXw6cFVXtUg5aDmXLCS50DVlsfUOMHD6KbJYXI1r4KqLY82yVOGWrFefBas5h1QteXxq3AT
        RsURz4TVfASqtjzaTFcZo8lMNFniYebpxKn+JrwNqgbpFp3AlJ1qy6NN95XxfqgapFt0gioT8Mph+iZw
        FKYapFs8HWw9ZcSpatYRNqXW+lxYzelQteXxp3ATGFg1SNV2gFm4lKba8vhLuAmjofMLYSXMU6p2vDLF
        Vw4nQqP8/2xRloX1iqodr6fCclhWrxpbrN7ewwVg1Y5X3k/KYVJENbbIcX4ls53AtFw5vcWUxTfASmY7
        gZduObeCqrHFt8BKZjuBpipVRtwNqoYW3wUrqeiE9CawHmvVY6rqdQa1+STqBWEpR0HV0OJHYSX8Lap2
        Il4MlsJxgGposSS723B2qNqJeFlYCm98qqHF1CrwCpnijFbu0i1lbWH0u7CaZS92VpYCl8J0lWpoUZX+
        zvI7qNryyrWTUn4NVUOLqZK5FUazVo+HwDI46Fi7Pv8Cq+ElptryWrX7bodLQdWItXqExgUU1Y7XO8My
        vKvD0aX3NTj2UO14vRcsw1vFwqrYSmYWXyhHuWVwdVk1Yr0KrOQIyHuNastjenOoYm3IvFi1F7qF4/+H
        w9E5CT2fDstgFapqxMrp9lZwxZs7cyLFI1w2LGOt0HOR1adbw8ee9xJ5PSyDJbKqEesD4W7Au75q33o8
        LMO7EpQp48/CilX1GVo/DUuIJDe2WI/s4dkN8x1YgjpZo2e0jH+GB0P1GVrLFmAi5b7RMv4ZeP9Rn6GV
        TxK7iy9FZGfqp+Bu4R3AlaTYWIajgis3qw4ReJ8Qdu9WilF1inWTRdAOj4HqM1hLBnD29K2RzDmUL3h0
        8P6FPgBOcxpUwXtOnYEYwLsjZvocl4tAFXjkteBu8AGo2reys6ZgolIFHsk9E7sBizVV+9boxrN9uCdU
        gUfyIIrdYC3xuzhzescOnI+rwCNZ/7w1rKD37tBh3dPUzTryeFxMH/oWgGe9qrZ7HgzTeKfQrTwRa2t4
        Iq9quyf3bKTgmJubOFTQkZuV2DfcHaq2e6YTrurIYY9brERZngBV2z3TNZY88UIF9HheuCUvhardnqzJ
        TsHtvCqgx9RJVwF4fJlqt2f6MflGqAJ65OmeW8IKdtVuT85pWBwaZm0pfuTD4FawgiVyHOEilxJDMMc/
        U1z9PLgVvUPy1uToN8R1oQrkdcuxQnbXbHijGufgKpDX1HkmTh4FVZtrhp8Qa5Vqa3KFqCTBKVg7+6Vn
        eP/D56AKFDGzS94Dk7mqPY/uw+84Q5tZDl9kqn4LZvZFuR/dM2cWtD4WVjNzqATlqpWLB0EVIGr1/gfC
        rJVqy6v7qcWDqlWAqOpw21lYuaLa8spslIuqw2VYjVr9hOA5DqqtiAfBIVyyUj+Y9cqwkuicQclcxJCZ
        6bOysnKFG9EqTv5ZTf8x+aB+MGvlcQJr24+8fhMO8ebyvVZuBPFW0K3JvyYuKkkOhLP7C6yVGzS9K04e
        u+W+d4LqB2atuDnyKeN9u4fH7n0hmrfzel84S9UodrF7tgLzcOoHZrWvPMjAIbiKPeM+bz7Mptc9VmwL
        8haTRtzn/TPZRIXXmZoFpvpmDpPoac+e33mTh/rGKldHaQN4SrCKOSuTtXv3Z1wYziRVPc7MKLc8NnXv
        ppCqqfNIvqYkO5nKnN7t9T1whw9C9Q3V8hDqKHyhnopVJS8JXgk7B7+rb6j2DjDK0VDFqpQbSnatE24B
        I/AMF2aIVaxKd0763vrJQDknib6EhskPFataTqg2HyPQzNI4S2xUrGp3OoEnVkRfMhWRj9/wYijg5eCt
        UJtxby6UWdyq03mtPPk3y2xi1eP/ZL+4aptZ8u7JPzOW1czAZfjZXbIj5SYVVoVlz05v5W73qs3aLP3h
        oTWqnRlZPtAdwPEsE5bRZ7bt84VV3JW6Rc3SvWHmhVhW5hjdJX2sAuXkhT3GM5D5XiUbkNkenqXCYwj5
        cr2ty/w5o2Rn8BKJzHc4C+W+69vBmcO0d7gA5KZwvqGL//3/hNuH+RvlNkRmxbj/inlIyjed8lTAR0Be
        4oPzpPfs+Q99JJymtE9wQQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4oPzpPfs+Q99JJymtE9wQQAAAABJRU5ErkJggg==
</value>
  </data>
</root>